{"version":3,"file":"static/js/168.1afe6730.chunk.js","mappings":"sKAAO,IAAMA,EAAM,CACjBC,QAAS,+BACTC,QAAS,mCAETC,eAJiB,SAIFC,GACb,OAAOC,MAAM,GAAD,OACPC,KAAKL,QADE,kBACeG,EADf,oBAC6BE,KAAKJ,QADlC,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDC,oBAViB,WAWf,OAAOL,MAAM,GAAD,OACPC,KAAKL,QADE,uCACoCK,KAAKJ,UACnDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDE,iBAhBiB,SAgBAC,GACf,OAAOP,MAAM,GAAD,OACPC,KAAKL,QADE,iCAC8BK,KAAKJ,QADnC,iCACmEU,IAC7EL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDI,kBAtBiB,SAsBCC,GAChB,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,2BAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDM,eA5BiB,SA4BFD,GACb,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,E,oHC/BH,EAA+B,8BAA/B,EAA4E,8B,SC8B5E,EA1BgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAASC,EAAAA,EAAAA,MAQf,OANAC,EAAAA,EAAAA,YAAU,WACRrB,EAAAA,EAAAA,kBAAsBmB,EAAOf,IAAIG,MAAK,SAAAe,GACpCJ,GAAW,OAAII,EAAKC,SACrB,GACF,GAAE,CAACJ,EAAOf,KAEe,IAAnBa,EAAQO,QACb,qEAEA,eAAIC,UAAWC,EAAf,SACGT,EAAQU,KAAI,SAAAC,GACX,OACE,gBAAIH,UAAWC,EAAf,WACE,qCAAaE,EAAOC,WACpB,uBAAID,EAAOE,YAFyBF,EAAOxB,GAKhD,KAGN,C","sources":["API.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["export const API = {\n  baseUrl: 'https://api.themoviedb.org/3',\n  API_KEY: '3ff904f01b180e8aa08fc9b52d5b2a33',\n\n  fetchByMovieId(id) {\n    return fetch(\n      `${this.baseUrl}/movie/${id}?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n\n  fetchTrendingMovies() {\n    return fetch(\n      `${this.baseUrl}/trending/movie/day?api_key=${this.API_KEY}`\n    ).then(res => res.json());\n  },\n\n  fetchByMovieName(name) {\n    return fetch(\n      `${this.baseUrl}/search/movie?api_key=${this.API_KEY}&language=en-US&query=${name}`\n    ).then(res => res.json());\n  },\n\n  fetchMovieReviews(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/reviews?api_key=${this.API_KEY}&language=en-US&page=1`\n    ).then(res => res.json());\n  },\n\n  fetchMovieCast(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/credits?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews_list\":\"Reviews_reviews_list__bJBhs\",\"reviews_item\":\"Reviews_reviews_item__G7P3y\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../../API';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    API.fetchMovieReviews(params.id).then(data => {\n      setReviews([...data.results]);\n    });\n  }, [params.id]);\n\n  return reviews.length === 0 ? (\n    <p>We don`t have any reviews for this movie</p>\n  ) : (\n    <ul className={css.reviews_list}>\n      {reviews.map(review => {\n        return (\n          <li className={css.reviews_item} key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API","baseUrl","API_KEY","fetchByMovieId","id","fetch","this","then","res","json","fetchTrendingMovies","fetchByMovieName","name","fetchMovieReviews","movieId","fetchMovieCast","useState","reviews","setReviews","params","useParams","useEffect","data","results","length","className","css","map","review","author","content"],"sourceRoot":""}