{"version":3,"file":"static/js/416.cb5926fc.chunk.js","mappings":"sKAAO,IAAMA,EAAM,CACjBC,QAAS,+BACTC,QAAS,mCAETC,eAJiB,SAIFC,GACb,OAAOC,MAAM,GAAD,OACPC,KAAKL,QADE,kBACeG,EADf,oBAC6BE,KAAKJ,QADlC,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDC,oBAViB,WAWf,OAAOL,MAAM,GAAD,OACPC,KAAKL,QADE,uCACoCK,KAAKJ,UACnDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDE,iBAhBiB,SAgBAC,GACf,OAAOP,MAAM,GAAD,OACPC,KAAKL,QADE,iCAC8BK,KAAKJ,QADnC,iCACmEU,IAC7EL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDI,kBAtBiB,SAsBCC,GAChB,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,2BAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDM,eA5BiB,SA4BFD,GACb,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,E,gIC/BH,EAA0B,8BAA1B,EAAoE,gCAApE,EAA8G,8BAA9G,EAAuJ,+BAAvJ,EAAkM,gC,kBCW5LO,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uOAaRE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mGAsEhB,EA9DqB,WAAO,IAAD,IACnBH,GAAUO,EAAAA,EAAAA,MAChB,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACR3B,EAAAA,EAAAA,eAAmBc,EAAQV,IAAIG,MAAK,SAAAqB,GAClCJ,EAASI,EACV,GACF,GAAE,CAACd,IAGFS,IACE,4BACE,0BACE,SAACP,EAAD,CAAUa,GAAE,oBAAEJ,EAASK,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,wBAEF,qBAASC,UAAWC,EAApB,WACE,0BACE,gBACED,UAAWC,EACXC,IAAG,yCAAoCX,EAAMY,aAC7CC,IAAKb,EAAMc,MACXC,MAAM,WAGV,iBAAKN,UAAWC,EAAhB,WACE,wBAAKV,EAAMc,SACX,wCAAgBd,EAAMgB,iBACtB,sCACA,uBAAIhB,EAAMiB,YACV,qCACA,wBACGjB,EAAMkB,OAAOC,KAAI,YAAmB,IAAhBtC,EAAe,EAAfA,GAAIQ,EAAW,EAAXA,KACvB,OAAO,wBAAcA,GAALR,EACjB,aAIP,4BACE,eAAI4B,UAAWC,EAAf,uCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAACd,EAAD,CAAYU,GAAG,UAAUC,MAAOL,EAASK,MAAzC,wBAIF,yBACE,SAACX,EAAD,CAAYU,GAAG,OAAOC,MAAOL,EAASK,MAAtC,2BAMN,SAAC,EAAAa,SAAD,CAAUC,UAAU,8CAApB,UACE,SAAC,KAAD,QAKT,C","sources":["API.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/MovieDetails.module.css?5280","components/pages/MovieDetails.jsx"],"sourcesContent":["export const API = {\n  baseUrl: 'https://api.themoviedb.org/3',\n  API_KEY: '3ff904f01b180e8aa08fc9b52d5b2a33',\n\n  fetchByMovieId(id) {\n    return fetch(\n      `${this.baseUrl}/movie/${id}?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n\n  fetchTrendingMovies() {\n    return fetch(\n      `${this.baseUrl}/trending/movie/day?api_key=${this.API_KEY}`\n    ).then(res => res.json());\n  },\n\n  fetchByMovieName(name) {\n    return fetch(\n      `${this.baseUrl}/search/movie?api_key=${this.API_KEY}&language=en-US&query=${name}`\n    ).then(res => res.json());\n  },\n\n  fetchMovieReviews(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/reviews?api_key=${this.API_KEY}&language=en-US&page=1`\n    ).then(res => res.json());\n  },\n\n  fetchMovieCast(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/credits?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__NA25D\",\"movie_img\":\"MovieDetails_movie_img__XrlgH\",\"content\":\"MovieDetails_content__tqn2P\",\"subtitle\":\"MovieDetails_subtitle__hAYXx\",\"link_list\":\"MovieDetails_link_list__z4VLM\",\"link_list__item\":\"MovieDetails_link_list__item__BRV3a\",\"active\":\"MovieDetails_active__umwux\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  NavLink,\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport css from './MovieDetails.module.css';\nimport { API } from '../../API';\n\nconst BackLink = styled(Link)`\n  width: 60px;\n  margin-top: 20px;\n  display: block;\n  padding: 10px;\n  background-color: #b2f1ff;\n  border-radius: 4px;\n  border: 2px solid #004352;\n  &:hover {\n    background-color: #6ce4ff;\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  font-size: 20px;\n  &.active {\n    color: red;\n  }\n`;\n\nconst MovieDetails = () => {\n  const movieId = useParams();\n  const [movie, setMovie] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    API.fetchByMovieId(movieId.id).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    movie && (\n      <div>\n        <div>\n          <BackLink to={location.state?.from ?? '/'}>Go back</BackLink>\n        </div>\n        <section className={css.section}>\n          <div>\n            <img\n              className={css.movie_img}\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n              width=\"300\"\n            />\n          </div>\n          <div className={css.content}>\n            <h2>{movie.title}</h2>\n            <p>User score: {movie.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres:</h3>\n            <ul>\n              {movie.genres.map(({ id, name }) => {\n                return <li key={id}>{name}</li>;\n              })}\n            </ul>\n          </div>\n        </section>\n        <div>\n          <h3 className={css.subtitle}>Additional information: </h3>\n          <ul className={css.link_list}>\n            <li>\n              <StyledLink to=\"reviews\" state={location.state}>\n                Reviews\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"cast\" state={location.state}>\n                Cast\n              </StyledLink>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<p>Loading details...</p>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API","baseUrl","API_KEY","fetchByMovieId","id","fetch","this","then","res","json","fetchTrendingMovies","fetchByMovieName","name","fetchMovieReviews","movieId","fetchMovieCast","BackLink","styled","Link","StyledLink","NavLink","useParams","useState","movie","setMovie","location","useLocation","useEffect","data","to","state","from","className","css","src","poster_path","alt","title","width","vote_average","overview","genres","map","Suspense","fallback"],"sourceRoot":""}