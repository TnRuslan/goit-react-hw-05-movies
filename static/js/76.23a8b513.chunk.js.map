{"version":3,"file":"static/js/76.23a8b513.chunk.js","mappings":"qKAAO,IAAMA,EAAM,CACjBC,QAAS,+BACTC,QAAS,mCAETC,eAJiB,SAIFC,GACb,OAAOC,MAAM,GAAD,OACPC,KAAKL,QADE,kBACeG,EADf,oBAC6BE,KAAKJ,QADlC,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDC,oBAViB,WAWf,OAAOL,MAAM,GAAD,OACPC,KAAKL,QADE,uCACoCK,KAAKJ,UACnDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDE,iBAhBiB,SAgBAC,GACf,OAAOP,MAAM,GAAD,OACPC,KAAKL,QADE,iCAC8BK,KAAKJ,QADnC,iCACmEU,IAC7EL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDI,kBAtBiB,SAsBCC,GAChB,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,2BAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,EAEDM,eA5BiB,SA4BFD,GACb,OAAOT,MAAM,GAAD,OACPC,KAAKL,QADE,kBACea,EADf,4BAC0CR,KAAKJ,QAD/C,oBAEVK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,E,mHC/BH,EAA4B,wBAA5B,EAAgE,wB,SCuChE,EAnCa,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MAQf,OANAC,EAAAA,EAAAA,YAAU,WACRrB,EAAAA,EAAAA,eAAmBmB,EAAOf,IAAIG,MAAK,SAAAe,GACjCJ,GAAQ,OAAII,EAAKL,MAClB,GACF,GAAE,CAACE,EAAOf,KAEY,IAAhBa,EAAKM,QACV,mDAEA,eAAIC,UAAWC,EAAf,SACGR,EAAKS,KAAI,SAAAT,GAAS,IAAD,EAChB,OACE,gBAAIO,UAAWC,EAAf,WACE,gBACEE,IACEV,EAAKW,aAAL,yCACsCX,EAAKW,cACvC,uDAENC,IAAKZ,EAAKL,KACVkB,MAAM,SAER,wBAAKb,EAAKL,QACV,iDAAeK,EAAKc,iBAApB,QAAiC,QAXAd,EAAKb,GAc3C,KAGN,C","sources":["API.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["export const API = {\n  baseUrl: 'https://api.themoviedb.org/3',\n  API_KEY: '3ff904f01b180e8aa08fc9b52d5b2a33',\n\n  fetchByMovieId(id) {\n    return fetch(\n      `${this.baseUrl}/movie/${id}?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n\n  fetchTrendingMovies() {\n    return fetch(\n      `${this.baseUrl}/trending/movie/day?api_key=${this.API_KEY}`\n    ).then(res => res.json());\n  },\n\n  fetchByMovieName(name) {\n    return fetch(\n      `${this.baseUrl}/search/movie?api_key=${this.API_KEY}&language=en-US&query=${name}`\n    ).then(res => res.json());\n  },\n\n  fetchMovieReviews(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/reviews?api_key=${this.API_KEY}&language=en-US&page=1`\n    ).then(res => res.json());\n  },\n\n  fetchMovieCast(movieId) {\n    return fetch(\n      `${this.baseUrl}/movie/${movieId}/credits?api_key=${this.API_KEY}&language=en-US`\n    ).then(res => res.json());\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../../API';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    API.fetchMovieCast(params.id).then(data => {\n      setCast([...data.cast]);\n    });\n  }, [params.id]);\n\n  return cast.length === 0 ? (\n    <p>We don`t have any cast</p>\n  ) : (\n    <ul className={css.cast_list}>\n      {cast.map(cast => {\n        return (\n          <li className={css.cast_item} key={cast.id}>\n            <img\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                  : 'https://via.placeholder.com/100x150.png?text=Profile'\n              }\n              alt={cast.name}\n              width=\"100\"\n            />\n            <h3>{cast.name}</h3>\n            <p>Character: {cast.character ?? ''}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API","baseUrl","API_KEY","fetchByMovieId","id","fetch","this","then","res","json","fetchTrendingMovies","fetchByMovieName","name","fetchMovieReviews","movieId","fetchMovieCast","useState","cast","setCast","params","useParams","useEffect","data","length","className","css","map","src","profile_path","alt","width","character"],"sourceRoot":""}